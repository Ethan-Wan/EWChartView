        -:    0:Source:/Users/wansy/Documents/project/BYSelf/EWChartView/EWChartView/EWChartViews/EWPieChartView.m
        -:    0:Graph:/Users/wansy/Library/Developer/Xcode/DerivedData/EWChartView-gwaqvpfjysmdagbdartktpszyxpm/Build/Intermediates/EWChartView.build/Debug-iphonesimulator/EWChartView.build/Objects-normal/x86_64/EWPieChartView.gcno
        -:    0:Data:/Users/wansy/Library/Developer/Xcode/DerivedData/EWChartView-gwaqvpfjysmdagbdartktpszyxpm/Build/Intermediates/EWChartView.build/Debug-iphonesimulator/EWChartView.build/Objects-normal/x86_64/EWPieChartView.gcda
        -:    0:Runs:12
        -:    0:Programs:1
        -:    1://
        -:    2://  EWPieChartView.m
        -:    3://  JBChartViewDemo
        -:    4://
        -:    5://  Created by wansy on 15/8/4.
        -:    6://  Copyright (c) 2015年 wansy. All rights reserved.
        -:    7://
        -:    8:
        -:    9:#import "EWPieChartView.h"
        -:   10:
        -:   11://default parameter
        -:   12:CGFloat static const kEWPieChartViewMaxRadius = 100.0f;
        -:   13:CGFloat static const kEWPieChartViewMinRadius = 0.0f;
        -:   14:CGFloat static const kEWPieChartViewStartAngle = 0.0f;
        -:   15:CGFloat static const kEWPieChartViewEndAngle = 360.0f;
        -:   16://CGFloat static const kEWPieChartViewAnimationDuration = 0.6f;
        -:   17:
        -:   18:EWPieChartShowTitleType static const kEWPieChartViewShowTitleType = EWPieChartShowTitleDefault;
        -:   19:BOOL static const kEWPieChartViewShowItemPercent = NO;
        -:   20:
function radians called 4224 returned 100% blocks executed 100%
        -:   21:static inline float radians(float degrees) {
     4224:   22:    return degrees * M_PI / 180.0;
unconditional  0 taken 4224
        -:   23:}
        -:   24:
        -:   25://in [0..1], out [0..1]
function easeInOut called 5280 returned 100% blocks executed 100%
        -:   26:static inline float easeInOut(float x){
        -:   27:    //1/(1+e^((0.5-x)*12))
     5280:   28:    return 1/(1+powf(M_E, (0.5-x)*12));
unconditional  0 taken 5280
        -:   29:}
        -:   30:
        -:   31://颜色
        -:   32:#define EWColor(r,g,b) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:1.0]
        -:   33://随即色
        -:   34:#define EWRandomColor EWColor(arc4random_uniform(256),arc4random_uniform(256),arc4random_uniform(256))
        -:   35:
        -:   36:@interface EWPieChartView()
        -:   37:
function -[EWPieChartView chartData] called 13728 returned 100% blocks executed 100%
function -[EWPieChartView setChartData:] called 1056 returned 100% blocks executed 100%
    14784:   38:@property (nonatomic, strong) NSArray *chartData;
unconditional  0 taken 13728
unconditional  1 taken 1056
        -:   39:
function -[EWPieChartView setValues:] called 1056 returned 100% blocks executed 100%
     1056:   40:@property (nonatomic, strong) NSMutableArray *values;
unconditional  0 taken 1056
        -:   41:
function -[EWPieChartView touchPoint] called 10560 returned 100% blocks executed 100%
function -[EWPieChartView setTouchPoint:] called 0 returned 0% blocks executed 0%
    10560:   42:@property (nonatomic, assign) CGPoint touchPoint;
unconditional  0 taken 10560
unconditional  1 never executed
        -:   43:
        -:   44://点击扇形的时候的偏移量
function -[EWPieChartView centerOffset] called 0 returned 0% blocks executed 0%
function -[EWPieChartView setCenterOffset:] called 0 returned 0% blocks executed 0%
    #####:   45:@property (nonatomic, assign) CGFloat centerOffset;
unconditional  0 never executed
unconditional  1 never executed
        -:   46:@end
        -:   47:
function -[EWPieChartView .cxx_destruct] called 0 returned 0% blocks executed 0%
    #####:   48:@implementation EWPieChartView
unconditional  0 never executed
        -:   49:
        -:   50:#pragma mark - init
        -:   51:
function -[EWPieChartView initWithFrame:] called 1056 returned 100% blocks executed 100%
        -:   52:- (id)initWithFrame:(CGRect)frame
        -:   53:{
     1056:   54:    self = [super initWithFrame:frame];
     1056:   55:    if(self){
branch  0 taken 1056
branch  1 taken 0
     1056:   56:        [self setup];
     1056:   57:    }
unconditional  0 taken 1056
     1056:   58:    return self;
     1056:   59:}
unconditional  0 taken 1056
        -:   60:
function -[EWPieChartView initWithCoder:] called 0 returned 0% blocks executed 0%
        -:   61:- (id)initWithCoder:(NSCoder *)aDecoder
        -:   62:{
    #####:   63:    self = [super initWithCoder:aDecoder];
    #####:   64:    if(self){
branch  0 never executed
branch  1 never executed
    #####:   65:        [self setup];
    #####:   66:    }
unconditional  0 never executed
    #####:   67:    return self;
    #####:   68:}
unconditional  0 never executed
        -:   69:
        -:   70:#pragma mark - Private Method
        -:   71:
function -[EWPieChartView setup] called 1056 returned 100% blocks executed 100%
        -:   72:- (void)setup
        -:   73:{
     1056:   74:    self.backgroundColor = [UIColor whiteColor];
     1056:   75:    self.maxRadius = kEWPieChartViewMaxRadius;
     1056:   76:    self.minRadius = kEWPieChartViewMinRadius;
     1056:   77:    self.startAngle = kEWPieChartViewStartAngle;
     1056:   78:    self.endAngle = kEWPieChartViewEndAngle;
        -:   79:    
     1056:   80:    self.titleAttributes = @{NSFontAttributeName:[UIFont systemFontOfSize:15]};
        -:   81:    
     3168:   82:    self.percentAttributes = @{NSFontAttributeName:[UIFont systemFontOfSize:12],
     2112:   83:                               NSForegroundColorAttributeName:[UIColor whiteColor]};
        -:   84:    
        -:   85://    self.animationDuration = kEWPieChartViewAnimationDuration;
     1056:   86:    self.showTitleType = kEWPieChartViewShowTitleType;
     1056:   87:    self.showItemPercent = kEWPieChartViewShowItemPercent;
     1056:   88:}
unconditional  0 taken 1056
        -:   89:
function -[EWPieChartView showItemTitleTypeAtItemIndex:] called 5280 returned 100% blocks executed 40%
        -:   90:-(EWPieChartShowTitleType)showItemTitleTypeAtItemIndex:(NSInteger)index
        -:   91:{
     5280:   92:    if ([self.delegate respondsToSelector:@selector(pieChartView:showItemTitleTypeAtItemIndex:)])
branch  0 taken 0
branch  1 taken 5280
        -:   93:    {
    #####:   94:        return [self.delegate pieChartView:self showItemTitleTypeAtItemIndex:index]?[self.delegate pieChartView:self showItemTitleTypeAtItemIndex:index]:EWPieChartShowTitleDefault;
branch  0 never executed
branch  1 never executed
unconditional  2 never executed
unconditional  3 never executed
branch  4 never executed
branch  5 never executed
unconditional  6 never executed
unconditional  7 never executed
        -:   95:    }else
        -:   96:    {
     5280:   97:        return self.showTitleType;
unconditional  0 taken 5280
        -:   98:    }
     5280:   99:}
unconditional  0 taken 5280
        -:  100:
function -[EWPieChartView showItemPercentAtItemIndex:] called 5280 returned 100% blocks executed 40%
        -:  101:-(BOOL)showItemPercentAtItemIndex:(NSInteger)index
        -:  102:{
     5280:  103:    if ([self.delegate respondsToSelector:@selector(pieChartView:showItemPercentAtItemIndex:)])
branch  0 taken 0
branch  1 taken 5280
        -:  104:    {
    #####:  105:        return [self.delegate pieChartView:self showItemPercentAtItemIndex:index]?[self.delegate pieChartView:self showItemPercentAtItemIndex:index]:NO;
branch  0 never executed
branch  1 never executed
unconditional  2 never executed
unconditional  3 never executed
branch  4 never executed
branch  5 never executed
unconditional  6 never executed
unconditional  7 never executed
        -:  106:    }else
        -:  107:    {
     5280:  108:        return self.showItemPercent;
unconditional  0 taken 5280
        -:  109:    }
     5280:  110:}
unconditional  0 taken 5280
        -:  111:
        -:  112:
function -[EWPieChartView drawItemTitles:sumValues:] called 1056 returned 100% blocks executed 59%
        -:  113:-(void)drawItemTitles:(CGContextRef)ctx sumValues:(CGFloat)sum
        -:  114:{
     1056:  115:    float angleStart = radians(self.startAngle);
     1056:  116:    float angleInterval = radians(self.endAngle - self.startAngle);
        -:  117:    
    12672:  118:    for (int index = 0; index < self.chartData.count; index++) {
unconditional  0 taken 1056
branch  1 taken 5280
branch  2 taken 1056
unconditional  3 taken 5280
     5280:  119:        EWPieChartViewCell *cell = self.chartData[index];
     5280:  120:        float angleEnd = angleStart + angleInterval * cell.value / sum;
     5280:  121:        float angle = (angleStart + angleEnd) / 2.0;
        -:  122:        
     5280:  123:        EWPieChartShowTitleType showTitleType = [self showItemTitleTypeAtItemIndex:index];
     5280:  124:        BOOL showPercent = [self showItemPercentAtItemIndex:index];
        -:  125:
     5280:  126:        if(showTitleType == EWPieChartShowTitleDefault && !showPercent){
branch  0 taken 0
branch  1 taken 5280
branch  2 never executed
branch  3 never executed
    #####:  127:            angleStart = angleEnd;
    #####:  128:            continue;
unconditional  0 never executed
    10560:  129:        }else if (showTitleType != EWPieChartShowTitleDefault && showPercent)
branch  0 taken 5280
branch  1 taken 0
branch  2 taken 5280
branch  3 taken 0
        -:  130:        {
     5280:  131:            [self drawTitle:cell angle:angle context:ctx];
     5280:  132:            [self drawPercent:cell angle:angle context:ctx sum:sum];
        -:  133:
     5280:  134:        }else if(showTitleType != EWPieChartShowTitleDefault )
unconditional  0 taken 5280
branch  1 never executed
branch  2 never executed
        -:  135:        {
    #####:  136:           [self drawTitle:cell angle:angle context:ctx];
    #####:  137:        }else if(showPercent)
unconditional  0 never executed
branch  1 never executed
branch  2 never executed
        -:  138:        {
    #####:  139:           [self drawPercent:cell angle:angle context:ctx sum:sum];
    #####:  140:        }
unconditional  0 never executed
        -:  141:        
     5280:  142:        angleStart = angleEnd;
    21120:  143:    }
unconditional  0 taken 5280
branch  1 taken 5280
branch  2 taken 5280
branch  3 taken 0
unconditional  4 taken 5280
     1056:  144:}
unconditional  0 taken 1056
        -:  145:
function -[EWPieChartView drawTitle:angle:context:] called 5280 returned 100% blocks executed 71%
        -:  146:-(void)drawTitle:(EWPieChartViewCell *)cell angle:(CGFloat)angle context:(CGContextRef)ctx
        -:  147:{
    21120:  148:    UIColor *color = cell.color?: [UIColor blackColor];
branch  0 taken 5280
branch  1 taken 0
unconditional  2 taken 5280
unconditional  3 never executed
branch  4 taken 0
branch  5 taken 5280
unconditional  6 never executed
        -:  149:    
    31680:  150:    NSString *title = cell.title?cell.title:[NSString stringWithFormat:@"%.2f", cell.value];
branch  0 taken 5280
branch  1 taken 0
unconditional  2 taken 5280
unconditional  3 never executed
branch  4 taken 0
branch  5 taken 5280
unconditional  6 never executed
branch  7 taken 5280
branch  8 taken 0
unconditional  9 taken 5280
     5280:  151:    float radius = self.maxRadius;
     5280:  152:    [self drawTitle:title angle:M_PI*2 - angle radius:radius context:ctx color:color];
     5280:  153:}
unconditional  0 taken 5280
        -:  154:
function -[EWPieChartView drawPercent:angle:context:sum:] called 5280 returned 100% blocks executed 100%
        -:  155:-(void)drawPercent:(EWPieChartViewCell *)cell angle:(CGFloat)angle context:(CGContextRef)ctx sum:(CGFloat)sum
        -:  156:{
     5280:  157:    [[UIColor whiteColor] set];
        -:  158:    
     5280:  159:    NSString *percent = [NSString stringWithFormat:@"%.1f%%",(cell.value / sum)*100];
     5280:  160:    float radius = (self.maxRadius + self.minRadius) * 0.5;
     5280:  161:    [self drawPercent:percent angle:M_PI*2 - angle radius:radius context:ctx];
     5280:  162:}
unconditional  0 taken 5280
        -:  163:
        -:  164:
        -:  165:/**
        -:  166: *  画标题
        -:  167: *
        -:  168: *  @param text   标题内容
        -:  169: *  @param angle  当前扇形的中间角度
        -:  170: *  @param radius 半径
        -:  171: *  @param ctx    上下文
        -:  172: *  @param font   标题样式
        -:  173: */
function -[EWPieChartView drawTitle:angle:radius:context:color:] called 5280 returned 100% blocks executed 100%
        -:  174:- (void)drawTitle:(NSString*)text angle:(float)angle radius:(float)radius context:(CGContextRef)ctx color:(UIColor *)color
        -:  175:{
    15840:  176:    NSDictionary *dic = @{NSFontAttributeName:self.titleAttributes[NSFontAttributeName],
    10560:  177:                          NSForegroundColorAttributeName:color};
     5280:  178:    self.titleAttributes = dic;
        -:  179:    
     5280:  180:    CGSize textSize = [text sizeWithAttributes:self.titleAttributes];
        -:  181:    CGPoint anchorPoint;
        -:  182:    
        -:  183:    //closewise
    10560:  184:    if(angle >= -M_PI_4 && angle < M_PI_4){
branch  0 taken 5280
branch  1 taken 0
branch  2 taken 1056
branch  3 taken 4224
     1056:  185:        anchorPoint = CGPointMake(0, easeInOut((M_PI_4-angle) / M_PI_2));
     9504:  186:    } else if(angle >= M_PI_4 && angle < M_PI_2+M_PI_4){
unconditional  0 taken 1056
branch  1 taken 4224
branch  2 taken 0
branch  3 taken 1056
branch  4 taken 3168
     1056:  187:        anchorPoint = CGPointMake(easeInOut((angle-M_PI_4) / M_PI_2), 0);
     7392:  188:    } else if(angle >= M_PI_2+M_PI_4 && angle < M_PI+M_PI_4){
unconditional  0 taken 1056
branch  1 taken 3168
branch  2 taken 0
branch  3 taken 1056
branch  4 taken 2112
     1056:  189:        anchorPoint = CGPointMake(1, easeInOut((angle - (M_PI_2+M_PI_4)) / M_PI_2));
     1056:  190:    } else {
unconditional  0 taken 1056
     2112:  191:        anchorPoint = CGPointMake(easeInOut(((2*M_PI - M_PI_4) - angle) / M_PI_2), 1);
unconditional  0 taken 2112
        -:  192:    }
        -:  193:    
     5280:  194:    CGPoint center = CGPointMake(self.bounds.size.width / 2, self.bounds.size.height / 2);
     5280:  195:    CGPoint pos = CGPointMake(center.x + radius*cosf(angle), center.y + radius*sinf(angle));
        -:  196:    
    10560:  197:    CGRect frame = CGRectMake(pos.x - anchorPoint.x * textSize.width,
     5280:  198:                              pos.y - anchorPoint.y * textSize.height,
     5280:  199:                              textSize.width,
     5280:  200:                              textSize.height);
     5280:  201:    UIGraphicsPushContext(ctx);
     5280:  202:    [text drawInRect:frame withAttributes:self.titleAttributes];
     5280:  203:    UIGraphicsPopContext();
     5280:  204:}
unconditional  0 taken 5280
        -:  205:
        -:  206:/**
        -:  207: *  画百分比
        -:  208: *
        -:  209: *  @param text   标题内容
        -:  210: *  @param angle  当前扇形的中间角度
        -:  211: *  @param radius 半径
        -:  212: *  @param ctx    上下文
        -:  213: *  @param font   标题样式
        -:  214: */
function -[EWPieChartView drawPercent:angle:radius:context:] called 5280 returned 100% blocks executed 100%
        -:  215:- (void)drawPercent:(NSString*)text angle:(float)angle radius:(float)radius context:(CGContextRef)ctx
        -:  216:{
     5280:  217:    CGSize textSize = [text sizeWithAttributes:self.percentAttributes];
        -:  218:    
     5280:  219:    CGPoint center = CGPointMake(self.bounds.size.width / 2, self.bounds.size.height / 2);
     5280:  220:    CGPoint textCenter = CGPointMake(center.x + radius*cosf(angle), center.y + radius*sinf(angle));
     5280:  221:    CGPoint drawPoint = CGPointMake(textCenter.x - textSize.width * 0.5 ,textCenter.y - textSize.height * 0.5);
        -:  222:    
     5280:  223:    UIGraphicsPushContext(ctx);
     5280:  224:    [text drawAtPoint:drawPoint withAttributes:self.percentAttributes];
     5280:  225:    UIGraphicsPopContext();
        -:  226:
        -:  227:    
        -:  228:    
     5280:  229:}
unconditional  0 taken 5280
        -:  230:#pragma mark - Public Method
        -:  231:
function -[EWPieChartView reloadData] called 1056 returned 100% blocks executed 63%
        -:  232:-(void)reloadData
        -:  233:{
     1056:  234:    [self setNeedsDisplay];
        -:  235:    
     1056:  236:    NSMutableArray *mutableChartData = [NSMutableArray array];
        -:  237:        
     4224:  238:    NSAssert([self.dataSource respondsToSelector:@selector(numberOfItemInPieChartView)], @"EWPieChartView // dataSource must implement - (NSUInteger)numberOfSection");
unconditional  0 taken 1056
branch  1 taken 0
branch  2 taken 1056
branch  3 never executed
branch  4 never executed
unconditional  5 never executed
unconditional  6 never executed
unconditional  7 never executed
unconditional  8 taken 1056
unconditional  9 taken 1056
     1056:  239:    NSUInteger numberOfItem = [self.dataSource numberOfItemInPieChartView];
        -:  240:        
    12672:  241:    for (NSUInteger itemIndex = 0; itemIndex < numberOfItem; itemIndex++)
unconditional  0 taken 1056
branch  1 taken 5280
branch  2 taken 1056
unconditional  3 taken 5280
        -:  242:    {
    21120:  243:        NSAssert([self.dataSource respondsToSelector:@selector(pieChartView:pieChartViewCellForItemIndex:)], @"EWPieChartView // delegate must implement - - (CGFloat)pieChartView(EWPieChartView *)pieChartViewitemValueForItemIndex:(NSUInteger)itemIndex;");
unconditional  0 taken 5280
branch  1 taken 0
branch  2 taken 5280
branch  3 never executed
branch  4 never executed
unconditional  5 never executed
unconditional  6 never executed
unconditional  7 never executed
unconditional  8 taken 5280
unconditional  9 taken 5280
     5280:  244:        EWPieChartViewCell *cell =  [self.dataSource pieChartView:self pieChartViewCellForItemIndex:itemIndex];
        -:  245:            
     5280:  246:        [mutableChartData addObject:cell];
     5280:  247:        [self.values addObject:@(cell.value)];
     5280:  248:    }
unconditional  0 taken 5280
     1056:  249:    self.chartData = [NSArray arrayWithArray:mutableChartData];
        -:  250:    
     1056:  251:    [self setNeedsDisplay];
     1056:  252:}
unconditional  0 taken 1056
        -:  253:
        -:  254:#pragma mark - drawRect
        -:  255:
function -[EWPieChartView drawRect:] called 1056 returned 100% blocks executed 58%
        -:  256:- (void)drawRect:(CGRect)rect {
     1056:  257:    [super drawRect:rect];
     3168:  258:    if(self.chartData.count == 0 || self.minRadius >= self.maxRadius)
branch  0 taken 1056
branch  1 taken 0
unconditional  2 taken 1056
branch  3 taken 0
branch  4 taken 1056
    #####:  259:        return;
unconditional  0 never executed
        -:  260:
     1056:  261:    float sum = [[self.values valueForKeyPath:@"@sum.floatValue"] floatValue];
     1056:  262:    if(sum <= 0)
branch  0 taken 0
branch  1 taken 1056
    #####:  263:        return;
unconditional  0 never executed
        -:  264:    
     1056:  265:    CGPoint center = CGPointMake(self.bounds.size.width / 2, self.bounds.size.height / 2);
        -:  266:    
     1056:  267:    CGContextRef ctx = UIGraphicsGetCurrentContext();
     1056:  268:    CGContextSaveGState(ctx);
        -:  269:    
        -:  270:    //翻转
     1056:  271:    CGContextTranslateCTM(ctx, 0, self.bounds.size.height);
     1056:  272:    CGContextScaleCTM(ctx, 1, -1);
        -:  273:    
     1056:  274:    __block float angleStart = radians(self.startAngle);
     4224:  275:    float angleInterval = radians(self.endAngle - self.startAngle);
branch  0 taken 1056
branch  1 taken 0
branch  2 taken 1056
branch  3 taken 0
branch  4 taken 1056
branch  5 taken 0
        -:  276:    
function __27-[EWPieChartView drawRect:]_block_invoke called 5280 returned 100% blocks executed 62%
     8448:  277:    [self.chartData enumerateObjectsUsingBlock:^(EWPieChartViewCell *cell, NSUInteger idx, BOOL *stop) {
branch  0 taken 1056
branch  1 taken 0
branch  2 taken 1056
branch  3 taken 0
     5280:  278:        float angleEnd = angleStart + angleInterval * cell.value / sum;
        -:  279://        float centrAngle = (angleEnd + angleStart) * 0.5;
        -:  280:        
    31680:  281:        UIColor *itemColor = cell.color?cell.color:EWRandomColor;
branch  0 taken 0
branch  1 taken 5280
unconditional  2 never executed
unconditional  3 taken 5280
branch  4 taken 5280
branch  5 taken 0
unconditional  6 taken 5280
branch  7 taken 0
branch  8 taken 5280
unconditional  9 never executed
     5280:  282:        cell.color = itemColor;
        -:  283:        
     5280:  284:        CGPoint minRadiusStart = CGPointMake(center.x + self.minRadius*cosf(angleStart), center.y + self.minRadius*sinf(angleStart));
     5280:  285:        CGPoint maxRadiusEnd = CGPointMake(center.x + self.maxRadius*cosf(angleEnd), center.y + self.maxRadius*sinf(angleEnd));
        -:  286:        
     5280:  287:        CGContextSaveGState(ctx);
        -:  288:
        -:  289:        //画扇形
     5280:  290:        CGContextMoveToPoint(ctx, minRadiusStart.x, minRadiusStart.y);
     5280:  291:        CGContextAddArc(ctx, center.x, center.y, self.minRadius, angleStart, angleEnd, NO);
     5280:  292:        CGContextAddLineToPoint(ctx, maxRadiusEnd.x, maxRadiusEnd.y);
     5280:  293:        CGContextAddArc(ctx, center.x, center.y, self.maxRadius, angleEnd, angleStart, YES);
     5280:  294:        CGContextClosePath(ctx);
     5280:  295:        [itemColor set];
        -:  296:    
        -:  297:        //选择的扇形
    15840:  298:        CGPoint transPoint = CGPointMake(self.touchPoint.x, self.frame.size.height - self.touchPoint.y);
branch  0 taken 5280
branch  1 taken 0
unconditional  2 taken 5280
unconditional  3 never executed
     5280:  299:        BOOL containsPoint = CGContextPathContainsPoint(ctx, transPoint, kCGPathFill);
     5280:  300:        if (containsPoint) {
branch  0 taken 0
branch  1 taken 5280
    #####:  301:            if ([self.delegate respondsToSelector:@selector(pieChartView:didSelectItemAtIndex:)]) {
branch  0 never executed
branch  1 never executed
    #####:  302:                [self.delegate pieChartView:self didSelectItemAtIndex:idx];
    #####:  303:            }
unconditional  0 never executed
    #####:  304:        }
unconditional  0 never executed
     5280:  305:            CGContextFillPath(ctx);
     5280:  306:            CGContextRestoreGState(ctx);
     5280:  307:        angleStart = angleEnd;
function __copy_helper_block_ called 0 returned 0% blocks executed 0%
function __destroy_helper_block_ called 0 returned 0% blocks executed 0%
     5280:  308:    }];
unconditional  0 taken 5280
unconditional  1 never executed
unconditional  2 never executed
        -:  309:    
     1056:  310:    CGContextRestoreGState(ctx);
branch  0 taken 1056
branch  1 taken 0
        -:  311:    
     5280:  312:    if (self.showTitleType != EWPieChartShowTitleDefault
branch  0 taken 1056
branch  1 taken 0
branch  2 taken 0
branch  3 taken 1056
unconditional  4 never executed
branch  5 taken 0
branch  6 taken 1056
unconditional  7 never executed
branch  8 taken 1056
branch  9 taken 0
     1056:  313:        || [self.delegate respondsToSelector:@selector(pieChartView:showItemTitleTypeAtItemIndex:)]
branch  0 taken 0
branch  1 taken 1056
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
    #####:  314:        || self.showItemPercent
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:  315:        || [self.delegate respondsToSelector:@selector(pieChartView:showItemPercentAtItemIndex:)]) {
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
unconditional  6 never executed
        -:  316:        
     1056:  317:        [self drawItemTitles:ctx sumValues:sum];
branch  0 taken 1056
branch  1 taken 0
     1056:  318:    }
unconditional  0 taken 1056
     2112:  319:}
unconditional  0 never executed
unconditional  1 taken 1056
unconditional  2 taken 1056
        -:  320:
        -:  321:#pragma mark - Touch
        -:  322:
function -[EWPieChartView touchesEnded:withEvent:] called 0 returned 0% blocks executed 0%
        -:  323:-(void)touchesEnded:(NSSet *)touches withEvent:(UIEvent *)event
        -:  324:{
    #####:  325:    UITouch *touch = [touches anyObject];
    #####:  326:    CGPoint touchPoint = [touch locationInView:self];
    #####:  327:    self.touchPoint = touchPoint;
    #####:  328:    [self setNeedsDisplay];
    #####:  329:}
unconditional  0 never executed
        -:  330:
        -:  331:#pragma mark - getter and setter
        -:  332:
function -[EWPieChartView values] called 6336 returned 100% blocks executed 100%
        -:  333:-(NSMutableArray *)values
        -:  334:{
     6336:  335:    if (!_values) {
branch  0 taken 1056
branch  1 taken 5280
     1056:  336:        self.values = [NSMutableArray array];
     1056:  337:    }
unconditional  0 taken 1056
     6336:  338:    return _values;
unconditional  0 taken 6336
        -:  339:}
        -:  340:@end
